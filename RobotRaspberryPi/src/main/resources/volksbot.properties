robot.plugin.factory = de.fhg.iais.roberta.factory.RaspberryPiFactory
robot.plugin.compiler.resources.dir = Volksbot/

robot.plugin.fileExtension.source = py
robot.plugin.fileExtension.binary = py

# robot specific toolboxes, default program and configuration
robot.program.toolbox.beginner = /volksbot/program.toolbox.xml
robot.program.toolbox.expert = /volksbot/program.toolbox.xml
robot.program.default = /volksbot/program.default.xml
robot.configuration.toolbox=/volksbot/configuration.toolbox.xml
robot.configuration.default=/volksbot/configuration.default.xml

# robot's long name to display
robot.real.name = VolksBot
robot.vendor = na

robot.beta = true
# robot's info for further information
robot.info.en = https://www.raspberrypi.org/
#can the robot be configured by the user? (sensors added/removed etc.)
robot.configuration = false
# either new or old-<sensorprefix> with <sensorprefix>="S" for all robots but mbot, which needs "P"
robot.configuration.type = new

robot.sim = true
# flag that compiled programs are send back to the client
robot.helperMethods=classpath:/common.methods.yml
# robot.connection = token
robot.connection = local

robot.descriptor = classpath:/volksbot.yml

robot.plugin.worker.validate.and.collect=de.fhg.iais.roberta.worker.VolksbotValidatorAndCollectorWorker
robot.plugin.worker.validate.and.collect.sim=de.fhg.iais.roberta.worker.VolksbotSimValidatorAndCollectorWorker
robot.plugin.worker.generate = de.fhg.iais.roberta.worker.VolksbotPythonGeneratorWorker
robot.plugin.worker.setup = de.fhg.iais.roberta.worker.CompilerSetupWorker
robot.plugin.worker.save = de.fhg.iais.roberta.worker.SaveWorker
robot.plugin.worker.transfer=de.fhg.iais.roberta.worker.VolksbotTransferWorker
robot.plugin.worker.generatesimulation=de.fhg.iais.roberta.worker.VolksbotStackMachineGeneratorWorker
robot.plugin.worker.transform.two2three=de.fhg.iais.roberta.worker.Two2ThreeTransformerWorker
robot.plugin.worker.transform.three2threeone=de.fhg.iais.roberta.worker.Three2ThreeOneTransformerWorker

robot.plugin.workflow.run = validate.and.collect,generate,setup,save,transfer
robot.plugin.workflow.transform=transform.two2three,transform.three2threeone
robot.plugin.workflow.compile=validate.and.collect,generate,setup,save
robot.plugin.workflow.getsimulationcode=validate.and.collect.sim,generatesimulation
